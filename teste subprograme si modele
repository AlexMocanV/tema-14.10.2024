1 c
2 c
3 a
4 a b c 
5 c
6 a
7 b
8 b
9 a
10
a)
 int f(int n)
{
    int i=2;
    while(i*i<=n)
    {
        int nr=0;
        if(n%i==0)
        {
            return i;
        }
        i++;
    }
    return n;
}
b)
#include <iostream>
int f(int n)
{
    int i=2;
    while(i*i<=n)
    {
        int nr=0;
        if(n%i==0)
        {
            return i;
        }
        i++;
    }
    return n;
}
int main()
{
    int n;
    std::cin>>n;
    int x;
    while(n--)
    {
        std::cin>>x;
        if(f(x)==x)
        std::cout<<x<<' ';
    }
    return 0;
}
1 2
2 f(4)=3 
   f(11)=5
3 f(7)=6
   f(100)=96
4 f(7,11)= -4
   f(11,7)= 1
5 re(1)=10
   re(14)=3
MODELE TESTE SUBPROGRAME
t1
1 a)F b)F) c)A d)A
2 b) void calcul(float a, float b, float &p, float &aria)
3.1 a) 10 5 6
      b) 3 1 17
3.2 a-b
4a) void afisare_divizori_proprii(int a)
{
    int i=2;
    for(i=2;i<=a/2;i++)
    {
        if(a%i==0)
        std::cout<<i<<' ';
    }
}
b)void verif_C_L_S(char c)
{
    if((int(c)>=97&&int(c)<=122)||(int(c)<=90&&int(c)<=65)
    {
        std::cout<<'C';
    }
    else if(int(c)-48<=9)
    {
        std::cout<<'L';
    }
    else std::cout<<'S';
}
5
#include <bits/stdc++.h>
void citire(int &n, int v[])
{
    std::cin>>n;
    for(int i=0;i<n;i++)
        std::cin>>v[i];
}
bool cmp(int a,int b)
{
    int nra=0;
    while(a)
    {
        if(a%10==0)nra+=1;
        a/=10;
    }
    int nrb=0;
    while(b)
    {
        if(b%10==0)nrb+=1;
        b/=10;
    }
    return nra>nrb;
}
void ordonare(int n,int v[]){
    std::sort(v+0,v+n,cmp);
}
void afisare(int n, int v[])
{
    for(int i=0;i<n;i++)
        std::cout<<v[i]<<' ';
}
int main()
{
    int n;
    int v[1001];
    citire(n,v);
    ordonare(n,v);
    afisare(n,v);
    return 0;
}
t2 
1 a-b
   b-c
   c-d
   d-e
2 c) int TEST (int x, int y, float z)
3.1) 9 5 11
    2) 3
4 a) #include <bits/stdc++.h>
void swapy(int n,int v[])
{
    int st=0,dr=n-1;
    while(st<dr)
    {
        int auz=v[st];
        v[st]=v[dr];
        v[dr]=v[st];
        st++;dr--;
    }
}
int main()
{
    int n;
    int v[1001];
    std::cin>>n;
    for(int i=0;i<n;i++)
    std::cin>>v[i];
    return 0;
}

b)#include <bits/stdc++.h>
int fibon(int n)
{
    if(n==1||n==2)
    return 1;
    int a=1,b=1,c=2;
    int nr=3;
    while(nr<=n)
    {
        a=b;
        b=c;
        c=c+a;
        nr++;
    }
    return c;
}
int main()
{
    int n;
    std::cin>>n;
    std::cout<<fibon(n);
    return 0;
}
5
#include <bits/stdc++.h>
void citire(int &n, int v[])
{
    std::cin>>n;
    for(int i=0;i<n;i++)
        std::cin>>v[i];
}
void afisare(int a, int b)
{
    std::cout<<std::min(a,b);
}
void solve(int n, int v[])
{
    int nr2=0,nr5=0;
    for(int i=0;i<n;i++)
    {
        while(v[i]%2==0)
        {
            nr2++;
            v[i]=v[i]/2;
        }
        while(v[i]%5==0)
        {
            nr5++;
            v[i]=v[i]/5;
        }
    }
    afisare(nr2,nr5);
}

int main()
{
    int n;
    int v[1001];
    citire(n,v);
    solve(n,v);
    return 0;
}

t3 
1 a) A
   b) A
   c) F
   d) A
2 a)
3.1) a 13 15 4
      b 2 5 4
  .2) 4
4 a)int cifmin(int n)
{
    if(n==0) return 10;
    return std::min(n%10,cifmin(n/10));
}
b)void P(int a,int b)
{
    while(a<=b)
    {
        std::cout<<a<<' ';
        a++;
    }
}

5
#include <bits/stdc++.h>
void citire(int &n, int v[])
{
    std::cin>>n;
    for(int i=0;i<n;i++)
        std::cin>>v[i];
}
int divizorul_celmaimic(int a)
{
    int i=2;
    while(a!=1)
    {
        int nr=0;
        while(a%i==0)
        {
            a/=i;nr++;
        }
        if(nr>0)
        {
            return nr;
        }
        if(i*i>a){
            break;
        }
        i++;
    }
    return 1;
}
void solve(int n,int v[])
{
    int maxi=0;
    int nr;
    for(int i=0;i<n;i++)
    {
        if(divizorul_celmaimic(v[i])>maxi)
        {
            maxi=divizorul_celmaimic(v[i]);
            nr=v[i];
        }
    }
    std::cout<<nr;
}
void afisare(int a, int b)
{
    std::cout<<std::min(a,b);
}
int main()
{
    int n;
    int v[1001];
    citire(n,v);
    solve(n,v);
    return 0;
}
